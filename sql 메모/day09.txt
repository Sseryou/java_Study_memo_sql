데이터 사전 뷰 (DICTIONARY)
ALL_ - 전체

USER_ - 사용자 한정

DICTIONARY - DICT


SQL

데이터 정의어(DDL)
Data Defintion Language

CREATE
	테이블
	CREATE TABLE 테이블명(
	컬럼명 자료형 [제약조건],
	...
	컬럼명 자료형 [제약조건],
	);

*SAL NUMBER(7,2) (전체 자리수 7 중 2가 소수점. 5자리.2자리)

ALTER
	테이블
	ALTER TABLE 테이블명
				ADD 컬럼명 자료형 [제약조건]
				MODIFY 컬럼명 자료형 [제약조건]
				RENAME COLUMN 기존 컬럼명 TO 새로운 컬럼명
				DROP COLUMN 컬럼명;

1) 테이블 EMP_EX3 (CREATE TABLE 활용)
2) TEL VARCHAR2(20)추가 (ADD 컬럼명 활용)
3) TEL -> MOBILE 이름 변경 (RENAME COLUMN 기존 컬럼명 TO 새로운 컬럼명) 활용
4) MOBILE 컬럼 삭제 (DROP COLUMN 컬럼명;)

테이블 명 변경
RENAME 기존 테이블명 TO 새로운 테이블명;

TRUNCATE TABLE 테이블명; - 테이블 비우기
-실행 하지마자 COMMIT
-복구 불가

참고)
DELETE FROM 테이블명; -> 조건절(WHERE)이 없으면 전체 데이터 삭제
-COMMIT해야 실제 완전 반영
-COMMIT 하지 않으면 복구 가능(ROLLBACK)

DROP
	테이블
	DROP TABLE 테이블명;



데이터의 구조 정의
데이터 사전 뷰 : 데이터 구조에 대한 정보, 사용자 정보....
(DICTIONARY)

ALL_ : 전체 모든 사용자의 각각의 정보
	예) ALL_TABLES -> 전체 테이블 명


USER_ : 현재 접속한 사용자의 각각의 정보...
	예 USER_TABLES -> 현재 사용자가 접근 할수 있는 테이블만


인덱스(INDEX - 목차)

생성
CREATE INDEX 인덱스명 ON 테이블명 (컬럼명 [ASC - 기본값 | DESC, 컬럼명 ....)

ASC - 오름차순
DESC - 내림차순

인덱스 정보 확인
	USER_INDEXES
	USER_IND_COLUMNS : 컬럼명 까지 자세히

인덱스 삭제
DROP INDEX 인덱스명;

뷰(VIEW)
가상의 테이블 - 원하는 데이터만 보여주기 편함
1. 직접 정의해서 만드는 방법
	생성
	CREATE VIEW 뷰 명칭
	AS SELECT문

	수정
	CREATE OR REPLACE C VIEW 뷰명칭
	AS SELECT 문
	- VIEW가 존재하면 수정, 없으면 추가

	권한 -GRANT CREATE

	삭제
	DROP VIEW 뷰명칭;

	VIEW 정보 확인
	-ALL_VIEWS
	-USER_VIEWS
	

2. 인라인 뷰(FROM 절에 사용할때)

SELECT E.* FROM (SELECT * FROM EMP WHERE DEPTNO=20) E;  <- E; = 별칭

WITH E AS (SELECT * FROM EMP WHERE DEPTNO=20)
SELECT * FROM E; (WITH구문 이용하여 더 깔끔하게 정리)
	

ROWNUM -> 행의 순번 (가상의 컬럼)

SELECT ROWNUM, E.* FROM EMP E
SELECT ROWNUM, E.* FROM EMP E WHERE ROWNUM <= 3;
3이하의 ROWNUM만 보이게(EMP에 E라는 이름을 붙이고 E에서 추출)

SELECT * FROM (SELECT ROWNUM num, E.* FROM EMP E) V
WHERE V.num >= 3 AND V.num <= 7;

WITH V AS (SELECT ROWNUM num, E.* FROM EMP E)
SELECT * FROM V
WHERE V.num >= 3 AND V.num <= 7; (위 식 WITH 구문 사용)


시퀀스

생성
CREATE SEQUENCE 시퀀스명; -> 1부터 시작, 1씩 증가, 무한대

CREATE SEQUENCE 시퀀스명
	[INCREMENT BY 수치] - 수치씩 증가
	[START WITH 수치] - 시작 번호
	[MAXVALUE 수치] - 최대 값
	[MINVALUE 수치] - 최소 값
	[CYCLE | NOCYCLE] - CYCLE - 최대값에 도달하면 다시 최소값부터 시작
			-NOCYCLE - 최대값을 넘어서면 오류 발생

	[CACHE 수치 | NOCACHE] - 기본값 CACHE 20( CACHE = 임시공간)

수정
ALTER SEQUENCE 시퀀스명

ALTER SEQUENCE 시퀀스명
	[INCREMENT BY 수치] - 수치씩 증가
	[START WITH 수치] - 시작 번호
	[MAXVALUE 수치] - 최대 값
	[MINVALUE 수치] - 최소 값
	[CYCLE | NOCYCLE] - CYCLE - 최대값에 도달하면 다시 최소값부터 시작
			-NOCYCLE - 최대값을 넘어서면 오류 발생

	[CACHE 수치 | NOCACHE] - 기본값 CACHE 20

삭제
DROP SEQUENCE 시퀀스명

-시퀀스 정보 조회

ALL_SEQUENCES
USER_SEQUENCES


접근
	시퀀스 객체
		.CURRVAL : 현재 값 : 현재 마지막 번호만 반환
		.NEXTVAL : 다음 값 : 현재 수치를 증가 -> 반환

INSERT INTO 테이블명
VALUES (시퀀스명.NEXTVAL, 값들.., 값들.., ...);

DUAL : SYS 계정의 가상의 테이블


동의어

DICTIONARY -> 동의어 DICT

CREATE SYNONYM 동의어 명 FOR 테이블명;

DROP SYNONYM 동의어 명

권한
CREATE SYNONYM; -> 현재 사용자의 테이블만
CREATE PUBLIC SYNONYM -> 모든 사용자

제약조건
	키

	후보키
	기본키
	대리키
	외래키

NOT NULL
	NULL -> 값이 입력되지 않은 상태
	NOT NULL -> NULL값 입력 미허용 : 필수 항목

UNIQUE
	-유일한 값 허용, NULL은 중복해서 추가 가능
	-여러개 정의 가능

PRIMARY KEY
	- 기본키 (UNIQUE + NOT NULL)
	- 단 1개만 있는 키

FOREIGN KEY
	- 외래키 : 제약조건 - 부모 레코드에 자식 레코드가 있으면 삭제 불가
			 - ON DELETE CASCADE
				: 연쇄 삭제 (부모 레코드가 삭제 -> 자식 레코드도 삭제)
			- ON DELETE SET NULL
				: 부모 레코드가 삭제 -> 자식 레코드의 외래키 NULL값 추가

CHECK
	-조건에 따른 제약조건

DEFAULT
	-기본값 설정


테이블 정의시 제약조건 추가
	CREATE TABLE 테이블명 (
		컬럼명 자료형 [CONSTRAINTS 제약조건명] [제약조건]
	);

테이블 정의 후 제약조건 추가
ALTER TABLE 테이블명 MODIFY 컬럼명 [CONSTRAINTS 제약조건명] 제약조건;

테이블의 제약조건 제거
ALTER TABLE 테이블명 DROP CONSTRAINTS 제약조건명;


제약 조건을 따로 정의 X -> 시스템 내에서 자동 생성

제약조건 명칭을 변경
ALTER TABLE 테이블명 RENAME CONSTRAINTS 기존 명칭 TO 새로운 명칭;

기본키 여러개
ALTER TABLE 테이블명 CONSTRAINT 이름 PRIMARY KEY


제약조건 활성화, 비활성화

ALTER TABLE 테이블명 DISABLE CONSTRAINT 제약조건명; - 비활성화

ALTER TABLE 테이블명 ENABLE CONSTRAINT 제약조건명; - 활성화

CHECK(조건식) -> SAL >= 10000


DEFAULT(기본값)


ALL_CONSTRAINTS
USER_CONSTRAINTS

ALL_CONS_COLUMNS;
USER_CONS_COLUMNS;


외래키 제약조건


CREATE TABLE EMP_FK2 (
	EMPNO NUMBER(4) CONSTRAINT EFK2_PK PRIMARY KEY,
	ENAME VARCHAR2(10),
	JOB VARCHAR2(9),
	MGR NUMBER(4),
	HIREDATE DATE,
	SAR NUMBER(7,2),
	COMM NUMBER(7,2),
	DEPTNO CONSTRAINT EFK_DEPTNO_FK REFERENCES DEPT_FK2 (DEPTNO)
);



데이터 조작어(DML)
Data Manipulation Language
SELECT, UPDATE, DELETE, INSERT

DCL(Data Control Language)
	-TCL
GRANT
REVOKE










시퀀스, 인덱스 복습,

CREATE TABLE DEPT_PK2(
	DNAME VARCHAR2(14),
	LOC VARCHAR2(13),
	CONSTRAINTS DPK2_PK PRIMARY KEY (DNAME, LOC)
);

DEPT_PK2 생성, DNAME과 LOC 두개에 PRIMARY KEY 지정, 제약 조건 이름을 DPK2_PK로 지정


ALTER TABLE DEPT_PK2 ADD CONSTRAINT DPK2_PK PRIMARY KEY(DNAME, LOC);
DEPT_PK2에 제약조건 추가 (DPK2_PK)


SELECT * FROM USER_CONS_COLUMNS WHERE TABLE_NAME='DEPT_PK2';

제약 조건이 달린 열을 DEPT_PK2에서 검색



시퀀스

SELECT * FROM USER_SEQUENCES 현재 유저가 갖고있는 시퀀스 나열

CREATE SEQUENCE 시퀀스명; //1부터 1씩 증감하고 무한대


CREATE SEQUENCE 시퀀스명
	INCREMENT BY 수치 -> 수치씩 증가
	START WITH 수치 -> 시작 번호
	MAXVALUE 수치 -> 최대 수치
	MINVALUE 수치 -> 최소 수치
	CYCLE - 최대 수치에 도달하면 다시 최소 수치부터 시작 | NOCYCLE - 최대 수치에 도달하면 오류
	CACHE 수치 | NOCACHE - CACHE 20 (임시공간 크기 설정, 시퀀스 등 데이터 양이 많으면 크게 설정)


CREATE TABLE DEPT_SEQUENCE 
AS SELECT * FROM DEPT WHERE 1 <> 1;  (구조만 복사)

CREATE SEQUENCE SEQ_DEPT_SEQ; //1부터 시작해서 1씩 증가하는 시퀀스 생성


INSERT INTO DEPT_SEQ
VALUES (SEQ_DEPT_SEQ.NEXTVAL, '부서명3', '지역명3'); (DEPT_SEQ에 값 주입, 부서명과 지역명만 바꿔서 실행 3번 시켰음)


시퀀스 객체
	.CURRVAL : 현재 번호
	.NEXTVAL : 현재 번호를 증가, 반환

DUAL -> SYS 계정이 소유하고 있는 가상의 테이블
	- 단일 값을 임시로 확인할때 사용


SELECT SEQ_DEPT_SEQ.CURRVAL FROM DUAL; 클릭해도 현재수치만 표시
SELECT SEQ_DEPT_SEQ.NEXTVAL FROM DUAL; 클릭하면 할수록 표시하면서 수치 증가



ALTER SEQUENCE 시퀀스명
	....



ALTER SEQUENCE SEQ_DEPT_SEQ
	INCREMENT BY 10
	MAXVALUE 90
	MINVALUE 0
	CYCLE
	NOCACHE;


DROP SEQUENCE 시퀀스명;



인덱스(INDEX)
목차


생성
				(기본값 ASC)
CREATE INDEX 인덱스명 ON 테이블명 (컬럼명 ASC | DESC, 컬럼명...)


삭제
DROP INDEX 인덱스명;





